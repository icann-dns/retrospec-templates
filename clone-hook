#!/usr/bin/env ruby
# runs a little bit of automation to keep the retrospec templates up to date
# To disable cloning set CLONE_RETROSPEC_TEMPLATES environment variable
# If you want to change the template source just set your plugins::puppet::templates::url
# in your retrospec settings file
# see https://github.com/nwops/retrospec-templates#configuration
# You can also replace this script with whatever you want. This isn't mandatory
# as long as you keep your templates up to date with some other mechanism.

require 'fileutils'
require 'open-uri'

@template_dir    = ARGV[0] || File.join(ENV['HOME'], '.retrospec/repos/retrospec-puppet-templates')
@template_repo   = ARGV[1] || 'https://github.com/nwops/retrospec-templates'
@template_branch = ARGV[2] || 'master'

def perform_update?
  update = true
  # try and check when the last time a fetch occured
  path = File.join(@template_dir, '.git', 'FETCH_HEAD')
  if File.exists?(path)
    last_updated = File.mtime(path) + 2*60*60  # add two hours
    update = last_updated < Time.now
  end
  update
end

def create_repo(template_dir, git_url, branch)
  # check if repo already exists
  unless git_exists?(template_dir)
     puts `git clone -b #{branch} #{git_url} #{template_dir}`
  end
end

def git_exists?(template_dir)
  File.exists? File.join(template_dir,'.git','config')
end

def origin_exists?(template_dir)
  `git --git-dir #{template_dir}/.git --work-tree #{template_dir} remote show origin`
  $?.success?
end

def set_ssh_config
  content = <<-EOF
Host github.com
  ControlMaster auto
  ControlPath ~/.ssh/ssh-%r@%h:%p
  ControlPersist yes

  EOF

  status = `grep 'Host github.com' ~/.ssh/config`
  unless $?.success?
    puts "Updating SSH config for clone speed improvments"
    File.open(File.expand_path('~/.ssh/config'), 'a') {|f| f.puts(content)}
  end
end

def update_templates(git_url, dest, branch='master')
  create_repo(dest, git_url, branch)
  puts `git --git-dir #{dest}/.git --work-tree #{dest} pull` if perform_update?
  dest
end

def connected?
  unless ENV['CLONE_RETROSPEC_TEMPLATES'].nil?
    # if the user wants internet but doesn't want cloning, allow them to set this variable
    return false
  end
  true
end

# returns the version of installed retrospec-puppet
def latest_puppet_retrospec_version
  gemspecs ||= if Gem::Specification.respond_to?(:latest_specs)
                  Gem::Specification.latest_specs
                else
                  Gem.searcher.init_gemspecs
                end
  g = gemspecs.find { |spec| spec.name == 'puppet-retrospec'}
  if g
    g.version
  else
    '0.0.0'
  end
end

#ensure config is set otherwise cloning will be slower using ssh
# disable as this causes problems
#set_ssh_config

if Gem::Version.new(latest_puppet_retrospec_version) < Gem::Version.new('0.12.0')
  puts "Newer version of retrospec-puppet detected, please update: gem update puppet-retrospec"
  puts "Incompatible plugin version with new templates, errors may follow without update"
  puts "You have version: #{latest_puppet_retrospec_version}"
end

# sometimes I work on an airplane and don't care to clone everything all the time
# so lets check for connectivity first
if connected?
  update_templates(@template_repo, @template_dir, @template_branch)
end
