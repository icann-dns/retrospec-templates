# frozen_string_literal: true

require 'spec_helper'

describe '<%= type_name -%>' do
  # by default the hiera integration uses hiera data from the shared_contexts.rb file
  # but basically to mock hiera you first need to add a key/value pair
  # to the specific context in the spec/shared_contexts.rb file
  # Note: you can only use a single hiera context per describe/context block
  # rspec-puppet does not allow you to swap out hiera data on a per test block
  # include_context :hiera

  let(:title) { 'XXreplace_meXX' }

  # below is the facts hash that gives you the ability to mock
  # facts on a per describe/context block.  If you use a fact in your
  # manifest you should mock the facts below.
  let(:facts) do
    {}
  end

  # below is a list of the resource parameters that you can override.
  # By default all non-required parameters are commented out,
  # while all required parameters will require you to add a value
  let(:params) do
    {
    <%- parameters.lines.each do |line| -%>
    <%= line -%>
    <%- end %>
    }
  end

  # add these two lines in a single test block to enable puppet and hiera debug mode
  # Puppet::Util::Log.level = :debug
  # Puppet::Util::Log.newdestination(:console)
  let (:pre_condition) { "class {'::xxxCHANGEMExxx' }" }
  on_supported_os.each do |os, facts|
    context "on #{os}" do
      let(:facts) do
        facts
      end

      describe 'check default config' do
        it { is_expected.to compile.with_all_deps }
<%- resources.each do |res| -%>
        <%= res -%>
<%- end -%>
      end
      describe 'Change Defaults' do
<% parameters.lines.each do |line| -%>
  <%- @key = line.split(':')[0].tr('#','').strip -%>
        context '<%= @key %>' do
          before { params.merge!(<%= @key %>: 'XXXchangemeXXX') }
          it { is_expected.to compile }
          # Add Check to validate change was successful
        end
<% end -%>
      end
      describe 'check bad type' do
<% parameters.lines.each do |line| -%>
  <%- @key = line.split(':')[0].tr('#','').strip -%>
        context '<%= @key %>' do
          before { params.merge!(<%= @key %>: true) }
          it { expect { subject.call }.to raise_error(Puppet::Error) }
        end
<% end -%>
      end
    end
  end
end
